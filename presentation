Bonjour à tous, Je suis D… aujourd’hui je fais une presentation sur l’evolution de mon stage intutulé «VSCode Extension pour un module de cybersecurity du compilateur LLVM ». Je suis accompagné de mes deux encadreurs, CR et FDF, de l'équipe CCC. Oui, j'ai la chance d'avoir deux encadreurs pour m'accompagner dans cette aventure !

Pour commencer, je vais me présenter, partager quelques informations sur moi-même et expliquer ce qui m'a motivé à choisir ce stage. Ensuite, je vous donnerai une vue d'ensemble de VSCode pour établir le contexte global.
Nous passerons ensuite aux extensions VSCode, en nous concentrant sur celles développées au sein de l'équipe CCC. Puis, parler de SecSwift je vous expliquerai le lien entre SecSwift et ces extensions VSCode.
Enfin, je terminerai par les perspectives futures.

Je m'appelle Diallo Moh..., étudiant en Master Informatique à l'ISIMA, au sein de l'INP de Clermont-Ferrand. J'ai commencé mon stage début avril, il y a environ un mois et demi, et je serai ici jusqu'au début août, soit une durée totale de quatre mois.
Ce stage m'a attiré pour deux raisons principales. La première est ma passion pour JavaScript. Lorsque j'ai découvert que le stage impliquait le développement d'une extension pour VS Code, j'ai immédiatement été séduit par l'idée de travailler avec TypeScript et JavaScript, qui sont mes langages de programmation favoris.
La seconde raison est liée le terme "compilation". Cela m'a rappelé mes cours de compilation et d’architecture d’ordinateur,  au cours desquels j'ai réalisé deux projets en assembleur : l'un consistait à créer une calculatrice, et l'autre à développer un système d'enregistrement utilisateur. J'avais beaucoup apprécié ces projet, notamment l'utilisation de labels et de sauts (les jump) pour implementer les structures de contrôle comme les conditions et les boucles. Bien que ce soit complexe en l’assembleur, j’ai bien aimé car en tant que passionné de jeux vidéo, depuis mon enfance, j'ai l'habitude de me confronter à des défis qui nécessitent une réflexion approfondie. Je me suis dit qu'il serait intéressant de voir comment ces concepts sont appliqués dans un contexte professionnel.




Visual Studio Code, souvent appelé VS Code, est un éditeur de code source développé par Microsoft qui a rapidement gagné en popularité parmi les développeurs. Dans le sondage auprès des développeurs réalisé par Stack Overflow en 2023, Visual Studio Code a été classé comme l'outil d'environnement de développement (IDE) le plus populaire, avec plus de 73 % des 86 544 répondants déclarant l'utiliser. Ce qui distingue VS Code, c'est sa capacité à être léger et rapide tout en offrant une extensibilité remarquable. Disponible sur Windows, macOS et Linux, il est accessible à une large gamme d'utilisateurs, ce qui en fait un choix universel pour le développement.
VS Code est editeur de code source, mais on peut aussi le designé comme un IDE (environnement de développement intégré), et comme tout IDE, on peut étendre ses fonctionnalités. Dans d'autres environnements comme Eclipse et IntelliJ, ces ajouts sont appelés "plugins", tandis que dans VS Code, on les appelle "extensions". Ces extensions permettent d'ajouter des fonctionnalités supplémentaires, comme des outils de débogage et des intégrations avec des services cloud, rendant l'éditeur encore plus puissant et adapté aux besoins spécifiques des développeurs.
VSCode à été publié en novembre 2015, il est codé en electron, un framework developpé par github, qui permet de développer des application multi-plateformes de bureau en utilisant les technologies du web (HTML, CSS, JavaScript, TS) comme Teams (l’app sur lequel on est pour cette presentation, Twitch, WhatsApp Desktop…)
L'une des caractéristiques les plus appréciées de VS Code est son support pour de nombreux langages de programmation, tels que JavaScript, Python, C++, et bien d'autres. Grâce à sa vaste bibliothèque d'extensions, les développeurs peuvent facilement ajouter le support pour presque n'importe quel langage.
VS Code est également connu pour son IntelliSense, qui offre une autocomplétion intelligente et des suggestions de code basées sur le contexte, améliorant ainsi la productivité. L'intégration Git est directement intégrée dans l'éditeur, permettant de gérer le contrôle de version sans quitter l'environnement de développement, ce qui est un atout majeur pour les équipes qui travaillent en collaboration.
Le débogage est une autre force de VS Code, avec des outils puissants qui permettent de tester et de corriger le code directement depuis l'éditeur. En plus de ses fonctionnalités techniques, VS Code bénéficie d'une communauté active qui contribue à son amélioration continue par le biais de nouvelles extensions et mises à jour. Microsoft fournit également une documentation exhaustive et des tutoriels pour aider les utilisateurs à tirer le meilleur parti de cet éditeur.





Visual Studio Code, souvent appelé VS Code, est un éditeur de code source développé par Microsoft.  Il est disponible sur Windows, macOS et Linux, ce qui le rend accessible à tous (Multiplatforme). Il  prend en charge de nombreux langages de programmation, tels que JavaScript, Python, C++, et bien d'autres.
VSCode est un IDE (environnement de développement intégré), et comme toute ide on peut etendre ses fonctionalités, Dans eclipse et dans inteliji on appel plugin, dans vs code on appel extension
Il dispose d'une vaste bibliothèque d'extensions pour ajouter des fonctionnalités supplémentaires comme IntelliSence, github, Remote-ssh, Prettier, Docker


STxP Compiler Explorer
This extension allows you to compile code through Compiler Explorer view integrated in VSCode. To use this feature, you will need to open the file you wish to compile. Then, open the Command Palette and search Compile with Compiler Explorer.

